name: Backend CI/CD

on:
  push:
    branches: [develop, main]
  pull_request:
    branches: [develop, main]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: vana_planner_test
        ports:
          - 5432:5432 # El puerto del host no importa tanto aquÃ­, el servicio se conecta internamente
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repositorio
        uses: actions/checkout@v4

      - name: Instalar Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Instalar dependencias
        run: poetry install

      - name: Ejecutar tests
        env:
          # Usamos las credenciales del servicio definido arriba
          DATABASE_URL: postgresql+asyncpg://testuser:testpass@localhost:5432/vana_planner_test
        run: poetry run pytest

  deploy:
    needs: test # <-- Este trabajo depende de que 'test' termine correctamente
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' # <-- Solo se ejecuta en push a main

    steps:
      - name: Checkout repositorio
        uses: actions/checkout@v4

      - name: Desplegar a Railway
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }}
        run: |
          curl -fsSL https://railway.app/install.sh | sh
          railway up --service calendar-backend --environment production